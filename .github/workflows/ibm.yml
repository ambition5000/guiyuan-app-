#此工作流将构建一个docker容器，将其发布到IBM Container Registry中，并在“主”分支存在推送时将其部署到IKS中。
#
#配置此工作流：
#
#1.确保存储库包含Dockerfile
#2.通过转到设置：Create ICR_NAMESPACE和IBM_CLOUD_API_KEY在存储库中设置密码
#3.更改IBM_CLOUD_REGION、REGISTRY_HOSTNAME、IMAGE_NAME、IKS_CLUSTER、Deployment_NAME和端口的值

姓名:构建和部署到IKS

在……之上:
推:
分支机构:[ "主要" ]

#此工作流中所有作业和步骤可用的环境变量
env:
GitHub_SHA:${{github.sha}}
IBM_CLOUD_API_KEY:${{secrets.IBM_CLOUD_API_KEY}}
IBM_CLOUD_REGION:美国-南方
ICR_NAMESPACE:${{secrets.ICR_NAMESPACE}}
registry_HOSTNAME:us.icr.io
image_NAME:iks-test
IKS_CLUSTER:example-iks-cluster-name-or-id
deployment_NAME:iks-test
港口:5001

工作:
设置-构建-发布-部署:
姓名:安装、生成、发布和部署
run-on:ubuntu-最新
环境:生产
步骤:

-姓名:结帐
uses:操作/结帐@v4

    #下载并安装IBM Cloud CLI
-姓名:安装IBM Cloud CLI
跑:|
curl-fsSL https://clis.cloud.ibm.com/install/linux|sh
ibmcloud--version
ibmcloud配置--check-version=false
ibmcloud插件安装-f kubernetes-service
ibmcloud插件安装-f容器注册表

    #使用IBM Cloud CLI进行身份验证
-姓名:使用IBM Cloud CLI进行身份验证
跑:|
ibmcloud登录--apikey“${IBM_CLOUD_API_KEY}”-r“${IBM_CLOUD_REGION}”-g默认值
ibmcloud cr区域集“${IBM_CLOUD_REGION}”
ibmcloud cr登录

    #建立Docker映像
-姓名:使用Docker构建
跑:|
Docker构建-t"$REGISTRY_HOSTNAME"/"$ICR_NAMESPACE"/"$IMAGE_NAME"："$GITHUB_SHA"\
--build-arg GITHUB_SHA="$GITHUB_SHA"\
--build-arg GITHUB_REF="$GITHUB_REF"。

    #将映像推送到IBM容器注册表
-姓名:将图像推送到ICR
跑:|
Docker推送$REGISTRY_HOSTNAME/$ICR_NAMESPACE/$IMAGE_NAME：$GITHUB_SHA

    # Deploy the Docker image to the IKS cluster
    - name: Deploy to IKS
      run: |
        ibmcloud ks cluster config --cluster $IKS_CLUSTER
        kubectl config current-context
        kubectl create deployment $DEPLOYMENT_NAME --image=$REGISTRY_HOSTNAME/$ICR_NAMESPACE/$IMAGE_NAME:$GITHUB_SHA --dry-run -o yaml > deployment.yaml
        kubectl apply -f deployment.yaml
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl create service loadbalancer $DEPLOYMENT_NAME --tcp=80:$PORT --dry-run -o yaml > service.yaml
        kubectl apply -f service.yaml
        kubectl get services -o wide
